version: "3.9"

services:
  # --- NGINX ---
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./back-end/public:/var/www/public:ro
    depends_on:
      backend:
        condition: service_started
      dashboard:
        condition: service_started
      landing-page:
        condition: service_started
    networks:
      - app-network

  # --- LARAVEL BACKEND (PHP-FPM) ---
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    expose:
      - "9000"
    environment:
      APP_ENV: "local"
      APP_DEBUG: "true"
      APP_URL: "http://localhost"
      DB_CONNECTION: "mysql"
      DB_HOST: "mysql"
      DB_PORT: "3306"
      DB_DATABASE: "laravel"
      DB_USERNAME: "root"
      DB_PASSWORD: ""
    volumes:
      - ./back-end:/var/www
    networks:
      - app-network
    depends_on:
      mysql:
        condition: service_healthy

  # --- MYSQL ---
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "laravel"
      MYSQL_USER: "root"
      MYSQL_PASSWORD: ""
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 10s
      timeout: 5s
      retries: 10

  # --- DASHBOARD (React + Vite) ---
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: dashboard
    restart: unless-stopped
    expose:
      - "5173"
    environment:
      NODE_ENV: "development"
      VITE_API_URL: "http://localhost/api"
    volumes:
      - ./dashboard:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_started

  # --- LANDING PAGE (Next.js) ---
  landing-page:
    build:
      context: ./landing-page
      dockerfile: Dockerfile
    container_name: landing_page
    restart: unless-stopped
    expose:
      - "3000"
    environment:
      NODE_ENV: "development"
      NEXT_PUBLIC_API_URL: "http://localhost/api"
    volumes:
      - ./landing-page:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_started

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
